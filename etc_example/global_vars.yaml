firewalld_disabled: true
timezone: Asia/Shanghai
use_domain_name_deploy: true
api_interface: ens3
enable_docker_auth: false
enable_domain_deploy: true
docker_register_address: 172.18.29.199
docker_register_domain: kunlunyun
docker_register_port: 5002
offline_deb_repo_port: 9865
harbor_username: admin
harbor_password: Harbor12345
docker_register_secrets_name: docker-register-secrets
# 开启 k8s 域名部署
use_domain_name_deploy: false
# docker 离线源是否支持域名, docker images 前缀名称默认为 kunlunyun:5002, 这种方式需要在 /etc/hosts 文件中配置 hosts 解析，因此需设置为 true
enable_docker_register_domain_deploy: true
# docker registry 离线源地址
docker_register_address: kunlunyun:5002
# 系统用户名
system_username: root
# 系统密码
system_password: 123456
# ipmi 厂商
ipmi_vendor: HUAWEI
# ipmi 连接用户名
ipmi_username: root
# ipmi 连接密码
ipmi_password: Huawei12#$

####################
# baremetal
####################
enable_aptsource: true
enable_install_package: true
apt_source: "172.18.28.237"
ping_interface: ['api', 'ceph_public', 'ceph_cluster']

####################
# Kubernetes options
####################
kubernetes_domain_name: kunlun.cluster.local
kubernetes_version: 1.23.5
kube_apiserver_vip: 172.18.31.31
kube_apiserver_port: 8443
kube_image_repository: "{{ docker_register_domain }}:{{ docker_register_port }}/kubernetes"
# k8s 集群 VIP 配置
kube_apiserver_vip: 172.18.28.193
# k8s 集群域名
kubernetes_domain_name: kunlun.cluster.local=
# k8s 集群 VIP 端口
kube_apiserver_port: 8443
# docker 镜像 namespace
kube_image_repository: "{{ docker_register_address }}/kubernetes"
# docker 镜像 tag
kube_image_tag: latest
kubernetes_version: 1.23.5
kubelet_cgroup_driver: systemd
kube_proxy_mode: ipvs
kubelet_root_dir: "/var/lib/kubelet"
wait_plugins_ready: false
docker_storage_dir: "/var/lib/docker"
kube_pod_subnet: 10.244.0.0/16
kube_dns_domain: cluster.local
flannel_backend: "host-gw"
kube_priority_name: system-node-critical
# Pod根容器
pod_infra_container_image: "{{ kube_image_repository }}/pause:3.6"
kubeadm_token: ceky52.rec2keii98oke7sl
# 节点的角色名称，默认values为enabled
control_node_role_name: control_role
compute_node_role_name: compute_role
storage_node_role_name: storage_role
node_role_value: enabled
docker_image_path : /opt/docker.images/images.latest.tar.gz
docker_dpkg_path: /opt/docker.deb

##############
# Helm options
##############
helm_install_namespace: default
helm_charts_dir: /opt/helm-charts
helm_wait_timeout: 300s

################
# Harbor options
################
enable_docker_auth: "{% if enable_docker_register_domain_deploy %}false{% else %}true{% end %}"
harbor_username: admin
harbor_password: Harbor12345
docker_register_secrets_name: docker-register-secrets

#################
# Haproxy options
#################
# 使用haproxy进行apiserver负载时使用的haproxy镜像
# haproxy监控绑定端口
lb_haproxy_stats_bind_address: 1984
# haproxy监控访问路径
lb_haproxy_stats_uri: "/stats"
# haproxy监控自动刷新时间（秒）
lb_haproxy_stats_refresh: 15
# haproxy监控用户名
lb_haproxy_stats_user: "admin"
# haproxy监控用户密码
lb_haproxy_stats_password: "admin"
# haproxy负载均衡算法，常见如下：
# "roundrobin": 基于服务器权重的轮询
# "leastconn": 基于服务器最小连接数
# "source": 基于请求源IP地址
# "uri": 基于请求的URI
lb_haproxy_balance_alg: "roundrobin"

####################
# Keepalived options
####################
# keepalived auth_type 的 password
lb_keepalived_password: "d0cker"
# 区分多个 instance 的 VRRP 组播，同网段不能重复，取值在0-255之间
lb_keepalived_router_id: 222
# 负载均衡器健康检查端口
lb_kube_apiserver_healthcheck_port: 8089

##############
# Etcd options
##############
# Etcd 数据根目录
etcd_data_dir: "/var/lib/etcd"
# Etcd 每日备份时间，默认3，即凌晨3点，取值范围0-23
etcd_backup_hour: "3"
# Etcd 每日备份文件保留时长，默认7天
etcd_backup_expiry: "7"
# etcd 备份目录
etcd_backup_dir: "/var/lib/etcd/backup"

##################
#  csi Options
##################
# kubernetes ceph csi
install_ceph_rbd_csi: true
create_rbd_storage_class: true
rbd_storage_class_name: general
rbd_service_port: 9081
rbd_check_port: 9082
install_ceph_cephfs_csi: true
create_cephfs_storage_class: true
cephfs_check_port: 9083
cephfs_service_port: 9084
cephfs_storage_class_name: cephfs-general
install_lvm_csi: false
lvm_service_port: 9500
lvm_storage_class_name: general
lvm_volgroup_name: lvmvg
create_lvm_storage_class: true
# eg: /dev/vdb or /dev/vdb1
lvm_pv_device: /dev/vdb

#################
# Ingress Options
#################
ingress_class_name: nginx
ingress_controller_class: "k8s.io/ingress-nginx"
ingress_http_port: 81
ingress_https_port: 443
ingress_metric_port: 10254

#################
# Libvirt Options
#################
ceph_rbd_secret_uuid: e2338e01-6f82-4236-885b-056847028c77
ceph_rbd_admin_user: client.admin

###################
# Trochilus Options
###################
trochilus_support_flat_network: true
trochilus_support_vlan_network: false
trochilus_network_vlan_range: 100:1000
trochilus_libvirt_driver: qemu
trochilus_api_listen_port: 9001
trochilus_agent_listen_port: 9002
trochilus_api_ingress: true
trochilus_voi_path: "{{ fsd_voi_dir }}"
trochilus_voi_base_path: "/var/lib/trochilus/voi"

#################
# Mariadb Options
#################
mariadb_root_password: 123456
mariadb_trochilus_password: 123456
mariadb_port: 3306
mariadb_storage_size: 10Gi
mariadb_toleration_seconds: 10
mariadb_pvc_name: mariadb-pvc

####################
# Prometheus Options
####################
prometheus_query_port: 19191
prometheus_server_port: 9090
thanos_sidecar_http_port: 19092
thanos_sidecar_grpc_port: 19091
prometheus_alertmanager_port: 9093
prometheus_alertmanager_cluster_port: 9094
prometheus_pushgateway_port: 9091
prometheus_node_exporter_port: 9100
prometheus_collectd_exporter_port: 9103
prometheus_collectd_udp_port: 25826
prometheus_host_exporter_port: 9104
pushgateway_clean_time: "*/1 * * * *"

##############
# Fsd Options
##############
# 如果需要外网映射，需配置外网映射的IP地址，没有的话则配置VIP
fsd_proxy_ip: ""
fsd_webhook_port: 9010
fsd_job_port: 9011
fsd_tcp_port: 9012
fsd_tcp_file_port: 9013
fsd_webhook_token: abc123
fsd_nginx_port: 9000
bt_server_port: 9019
bt_tracker_port: 9020
bt_download_port_start: 6880
bt_download_port_end: 6889
fsd_cloud_disk_user_name: troila
fsd_cloud_disk_password: Troila12
fsd_host_network: true
fsd_voi_dir: "{{ desktop_mount_dir }}/voi"
vdi_cpu_num: 50
vdi_memory_num: 16
vdi_storage_num: 1000
cloud_disk_num: 1000

#######################
# elasticsearch Options
#######################
es_storage_size: 10Gi
es_http_port: 9200
es_data_save_days: 7
## At 01:00 every day
es_date_del_time: "0 1 * * *"

#################
# kibana Options
#################
kibana_node_port: 32000

################
# emqx Options
################
emqx_pod_pullPolicy: IfNotPresent
emqx_svc_type: ClusterIP
emqx_persistence_accessMode: ReadWriteOnce
emqx_persistence_size: 20Mi
emqx_persistence_storageClass: "{{ rbd_storage_class_name }}"
emqx_priorityclassname: "{{ kube_priority_name }}"
emqx_hostnetwork: true
emqx_mqtt_port: 1883
emqx_mgmt_port: 8081
emqx_mqttssl_port: 8883
emqx_ws_port: 8083
emqx_wss_port: 8084

#################
# role开关
#################
enable_baremetal: true
enable_load_balancer: true
enable_kube_master: true
enable_kube_worker: true
enable_ingress: true
enable_mariadb: true
enable_redis: true
enable_emqx: true
enable_libvirt: true
enable_trochilus: true
enable_websockify: true
enable_prometheus: true
enable_guest_server: true
enable_fsd: true
enable_btserver: true
enable_elasticsearch: "{% if only_deploy_voi %}false{% else %}true{% endif %}"
enable_fluentd: "{% if only_deploy_voi %}false{% else %}true{% endif %}"
enable_kibana: "{% if only_deploy_voi %}false{% else %}true{% endif %}"
enable_ceph: "{% if only_deploy_voi %}false{% else %}true{% endif %}"
enable_checknet: "{% if only_deploy_voi %}false{% else %}true{% endif %}"

################
# Redis Options
################
redis_storage_size: 10Gi
redis_master_password: zhuolang@Troila@123
redis_master_group_name: mymaster
redis_server_port: 6379
redis_sentinel_port: 26379
redis_host_network: true

####################
# websockify Options
####################
websockify_port: 9003

#######################
# btserver
#######################
btserver_image_tag: "{{ kube_image_tag }}"
btserver_pod_pullPolicy: "IfNotPresent"
btserver_svc_type: "ClusterIP"
btserver_hostnetwork: "yes"
btserver_containers_name_track: "btserver-track"
volume_mount_name: "btserver"
volume_mount_path: "/btserver"
volumes_name: "btserver"
volumes_path: "/mnt/cephfs"
volumes_type: "DirectoryOrCreate"
voi_node_role_name: "voi_role"
resources_limits_cpu: "200m"
resources_limits_memory: "200Mi"
resources_requests_cpu: "200m"
resources_requests_memory: "200Mi"
btserver_port: "9019"
btserver_port_track: "9020"

##############
# VOI Options
##############
only_deploy_voi: false
voi_data_device: ""
voi_data_directory: "{{ desktop_mount_dir }}"
