apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: pushgateway
  namespace: {{ .Release.Namespace | quote }}
spec:
  replicas: {{ .Values.replica }}
  selector:
    matchLabels:
      app.kubernetes.io/name: pushgateway
  template:
    metadata:
      labels:
        app.kubernetes.io/name: pushgateway
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: {{ .Values.affinity.key }}
                operator: In
                values:
                - {{ .Values.affinity.value }}
            weight: 100
      containers:
      - name: pushgateway
        args:
          - --web.listen-address={{ .Values.pushgatewayVIP }}:{{ .Values.service.pushgateway.port }}
        image: {{ .Values.image.pushgateway }}
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: {{ .Values.service.pushgateway.port }}
          name: http
          protocol: TCP
        resources: {}
      priorityClassName: {{ .Values.priorityClassName }}
      restartPolicy: Always
      {{- if .Values.image.pullSecrets }}
      imagePullSecrets:
        - name: {{ .Values.image.pullSecrets }}
      {{- end }}
      dnsPolicy: ClusterFirstWithHostNet
      hostNetwork: true
      serviceAccount: {{ .Values.serviceAccountName}}
      serviceAccountName: {{ .Values.serviceAccountName}}
      {{- if .Values.nodeSelector }}
      nodeSelector: {{- include "common.tplvalues.render" (dict "value" .Values.nodeSelector "context" $) | nindent 8 }}
      {{- end }}
