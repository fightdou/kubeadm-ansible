affinity:
  podAntiAffinity:
    preferredDuringSchedulingIgnoredDuringExecution:
      - weight: 100
        podAffinityTerm:
          labelSelector:
            matchExpressions:
              - key: app
                operator: In
                values:
                  - "emqx"
          topologyKey: "kubernetes.io/hostname"
containerSecurityContext:
  enabled: true
  runAsNonRoot: true
  runAsUser: 1000
emqxAclConfig: |
  {allow, {user, "dashboard"}, subscribe, ["$SYS/#"]}. {allow, {ipaddr, "127.0.0.1"}, pubsub, ["$SYS/#", "#"]}. {deny, all, subscribe, ["$SYS/#", {eq, "#"}]}. {allow, all}.
emqxConfig:
  EMQX_CLUSTER__DISCOVERY: k8s
  EMQX_CLUSTER__K8S__ADDRESS_TYPE: ip
  EMQX_CLUSTER__K8S__APISERVER: https://{{ k8s_virt_ip }}:{{ k8s_virt_port }}
  EMQX_MANAGEMENT__LISTENER__HTTP: '8082'
emqxLicenseSecretName: null
emqxLoadedModules: |
  {emqx_mod_acl_internal, true}. {emqx_mod_presence, true}. {emqx_mod_trace, false}. {emqx_mod_slow_subs, false}. {emqx_mod_delayed, false}. {emqx_mod_rewrite, false}. {emqx_mod_subscription, false}. {emqx_mod_topic_metrics, false}.
emqxLoadedPlugins: |
  {emqx_management, true}. {emqx_recon, true}. {emqx_retainer, true}. {emqx_dashboard, true}. {emqx_telemetry, true}. {emqx_rule_engine, true}. {emqx_bridge_mqtt, false}.
extraArgs: []
extraEnv: []
extraEnvFrom: []
extraVolumeMounts: []
extraVolumes: []
image:
  pullPolicy: "{{ emqx_pod_pullPolicy }}"
  repository: "{{ emqx_image_repository }}"
  tag: "{{ emqx_image_tag }}"
  pullSecrets: 
    - "{{ docker_register_secrets_name }}"
ingress:
  annotations: {}
  dashboard:
    annotations: {}
    enabled: false
    hosts:
    - dashboard.emqx.local
    path: /
    tls: []
  mgmt:
    annotations: {}
    enabled: false
    hosts:
    - api.emqx.local
    path: /
    tls: []
  wss:
    annotations: {}
    enabled: false
    hosts:
    - wss.emqx.local
    path: /mqtt
    tls: []
initContainers: {}
nodeSelector:
  {{ control_node_role_name }}: "{{ node_role_value }}"
persistence:
  accessMode: "{{ emqx_persistence_accessMode }}"
  enabled: "{{ emqx_persistence | bool }}"
  size: "{{ emqx_persistence_size }}"
  storageClass: "{{ emqx_persistence_storageClass }}"
podManagementPolicy: Parallel
podSecurityContext:
  enabled: true
  fsGroup: 1000
  fsGroupChangePolicy: Always
  runAsUser: 1000
  supplementalGroups:
  - 1000
recreatePods: false
replicaCount: "{{ emqx_pod_replicaCount }}"
resources: {}
service:
  annotations: {}
  dashboard: 18083
  externalIPs: []
  loadBalancerSourceRanges: []
  mgmt: 8081
  mqtt: 1883
  mqttssl: 8883
  nodePorts:
    dashboard: null
    dashboardtls: null
    mgmt: null
    mqtt: null
    mqttssl: null
    ws: null
    wss: null
    #  type: ClusterIP
  type: "{{ emqx_svc_type }}"
  ws: 8083
  wss: 8084
hostnetwork: "{{ emqx_hostnetwork | bool }}"
tolerations: []
