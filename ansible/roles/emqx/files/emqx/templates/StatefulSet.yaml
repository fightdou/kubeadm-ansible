{{ $cfgEnv := printf "%s"  (include (print $.Template.BasePath "/configmap.env.yaml") .) }}
{{ $cfgAcl := printf "%s"  (include (print $.Template.BasePath "/configmap.acl.yaml") .) }}
{{ $cfgPlugins := printf "%s" (include (print $.Template.BasePath "/configmap.loadedPlugins.yaml") .) }}
{{ $cfgModules := printf "%s"  (include (print $.Template.BasePath "/configmap.loadedModules.yaml") .) }}
{{ $configData := printf "%s\n%s\n%s\n%s" $cfgEnv $cfgAcl $cfgPlugins $cfgModules}}
  ## Compatible with previous misspellings
{{ $licenseSecretName := coalesce .Values.emqxLicenseSecretName .Values.emqxLicneseSecretName }}
{{ $image := printf "%s:%s" .Values.image.repository .Values.image.tag }}

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "emqx.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/name: {{ include "emqx.name" . }}
    helm.sh/chart: {{ include "emqx.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  serviceName: {{ include "emqx.fullname" . }}-headless
  podManagementPolicy: {{ .Values.podManagementPolicy }}
  {{- if and .Values.persistence.enabled (not .Values.persistence.existingClaim) }}
  volumeClaimTemplates:
    - metadata:
        name: emqx-data
        namespace: {{ .Release.Namespace }}
        labels:
          app.kubernetes.io/name: {{ include "emqx.name" . }}
          app.kubernetes.io/instance: {{ .Release.Name }}
          app.kubernetes.io/managed-by: {{ .Release.Service }}
        annotations:
        {{- if .Values.persistence.storageClass }}
          volume.beta.kubernetes.io/storage-class: {{ .Values.persistence.storageClass | quote }}
        {{- else }}
          volume.alpha.kubernetes.io/storage-class: default
        {{- end }}
      spec:
        accessModes:
          - {{ .Values.persistence.accessMode | quote }}
        resources:
         requests:
           storage: {{ .Values.persistence.size | quote }}
  {{- end }}
  updateStrategy:
    type: RollingUpdate
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "emqx.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ include "emqx.name" . }}
        version: {{ .Chart.Version }}
        app.kubernetes.io/name: {{ include "emqx.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
      {{- if .Values.recreatePods }}
      annotations:
        checksum/config: {{ $configData | sha256sum | quote }}
      {{- end }}
    spec:
      volumes:
      {{- if .Values.emqxLoadedPlugins }}
      - name: emqx-loaded-plugins
        configMap:
          name: {{ include "emqx.fullname" . }}-loaded-plugins
          items:
          - key: loaded_plugins
            path: loaded_plugins
      {{- end }}
      {{- if .Values.emqxLoadedModules }}
      - name: emqx-loaded-modules
        configMap:
          name: {{ include "emqx.fullname" . }}-loaded-modules
          items:
          - key: loaded_modules
            path: loaded_modules
      {{- end }}
      {{- if .Values.emqxAclConfig }}
      - name: emqx-acl
        configMap:
          name: {{ include "emqx.fullname" . }}-acl
          items:
          - key: acl.conf
            path: acl.conf
      {{- end }}
      {{- if not .Values.persistence.enabled }}
      - name: emqx-data
        emptyDir: {}
      {{- else if .Values.persistence.existingClaim }}
      - name: emqx-data
        persistentVolumeClaim:
        {{- with .Values.persistence.existingClaim }}
          claimName: {{ tpl . $ }}
        {{- end }}
      {{- end }}
      {{- if .Values.extraVolumes }}
{{ toYaml .Values.extraVolumes | indent 6 }}
      {{- end }}
      {{- if $licenseSecretName }}
      - name: emqx-license
        secret:
          secretName: {{ $licenseSecretName }}
      {{- end }}
      {{- if eq (.Values.emqxConfig.EMQX_CLUSTER__DISCOVERY | default "k8s") "k8s"  }}
      serviceAccountName:  {{ include "emqx.fullname" . }}
      {{- end }}
      {{- if .Values.podSecurityContext.enabled }}
      securityContext: {{- omit .Values.podSecurityContext "enabled" | toYaml | nindent 8 }}
      {{- end }}
      {{- if .Values.initContainers }}
      initContainers:
{{ toYaml .Values.initContainers | indent 8 }}
      {{- end }}
      {{- if .Values.image.pullSecrets }}
      imagePullSecrets:
        {{- range .Values.image.pullSecrets }}
        - name: {{ . }}
      {{- end }}
      {{- end }}
      hostNetwork: {{ .Values.hostnetwork }}
      containers:
        - name: emqx
          image: {{ $image }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- if .Values.containerSecurityContext.enabled }}
          securityContext: {{- omit .Values.containerSecurityContext "enabled" | toYaml | nindent 12 }}
          {{- end }}
          ports:
          - name: mqtt
            containerPort: {{ .Values.emqxConfig.EMQX_LISTENER__TCP__EXTERNAL | default 1883 }}
          - name: mqttssl
            containerPort: {{ .Values.emqxConfig.EMQX_LISTENER__SSL__EXTERNAL | default 8883 }}
          - name: mgmt
            containerPort: {{ .Values.emqxConfig.EMQX_MANAGEMENT__LISTENER__HTTP | default 8082 }}
          - name: ws
            containerPort: {{ .Values.emqxConfig.EMQX_LISTENER__WS__EXTERNAL | default 8083 }}
          - name: wss
            containerPort: {{ .Values.emqxConfig.EMQX_LISTENER__WSS__EXTERNAL | default 8084 }}
          - name: dashboard
            containerPort: {{ .Values.emqxConfig.EMQX_DASHBOARD__LISTENER__HTTP | default 18083 }}
          {{- if not (empty .Values.emqxConfig.EMQX_LISTENER__TCP__INTERNAL) }}
          - name: internalmqtt
            containerPort: {{ .Values.emqxConfig.EMQX_LISTENER__TCP__INTERNAL }}
          {{- end }}
          {{- if not (empty .Values.emqxConfig.EMQX_DASHBOARD__LISTENER__HTTPS) }}
          - name: dashboardtls
            containerPort: {{ .Values.emqxConfig.EMQX_DASHBOARD__LISTENER__HTTPS }}
          {{- end }}
          - name: ekka
            containerPort: 4370
          envFrom:
          - configMapRef:
              name: {{ include "emqx.fullname" . }}-env
          {{- if .Values.extraEnvFrom }}
{{ toYaml .Values.extraEnvFrom | indent 10 }}
          {{- end }}
          {{- if .Values.extraEnv }}
          env:
{{ toYaml .Values.extraEnv | indent 10 }}
          {{- end }}
          resources:
{{ toYaml .Values.resources | indent 12 }}
          volumeMounts:
          - name: emqx-data
            mountPath: "/opt/emqx/data"
          {{- if .Values.emqxAclConfig }}
          - name: emqx-acl
            mountPath: "/opt/emqx/etc/acl.conf"
            subPath: "acl.conf"
          {{- end }}
          {{- if .Values.emqxLoadedPlugins }}
          - name: emqx-loaded-plugins
            mountPath: "/opt/emqx/data/loaded_plugins"
            subPath: "loaded_plugins"
          {{- end }}
          {{- if .Values.emqxLoadedModules }}
          - name: emqx-loaded-modules
            mountPath: "/opt/emqx/data/loaded_modules"
            subPath: "loaded_modules"
          {{- end }}
          {{- if $licenseSecretName }}
          - name: emqx-license
            mountPath: "/opt/emqx/etc/emqx.lic"
            subPath: "emqx.lic"
            readOnly: true
          {{ end }}
          {{- if and .Values.extraVolumes .Values.extraVolumeMounts }}
{{ toYaml .Values.extraVolumeMounts | indent 10 }}
          {{- end }}
          {{- if .Values.extraArgs }}
          args: {{ toYaml .Values.extraArgs | nindent 10 }}
          {{- end }}
          readinessProbe:
            httpGet:
              path: /status
              port: {{ .Values.emqxConfig.EMQX_MANAGEMENT__LISTENER__HTTP | default 8082 }}
            initialDelaySeconds: 10
            periodSeconds: 5
            failureThreshold: 30
          livenessProbe:
            httpGet:
              path: /status
              port: {{ .Values.emqxConfig.EMQX_MANAGEMENT__LISTENER__HTTP | default 8082 }}
            initialDelaySeconds: 60
            periodSeconds: 30
            failureThreshold: 10
          lifecycle:
            preStop:
              exec:
                command:
                  - "/opt/emqx/bin/emqx_ctl"
                  - "cluster"
                  - "leave"
    {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
